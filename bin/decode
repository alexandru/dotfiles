#!/usr/bin/python

import argparse
import subprocess
import sys


def run(env, command):
    HOST = 'app1.gw.{}'.format(env)

    ssh = subprocess.Popen(
        ["ssh", "%s" % HOST, command],
        shell=False,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE
    )

    result = ssh.stdout.readlines()
    if result == []:
        error = ssh.stderr.readlines()
        print("ERROR: %s" % error)
    else:
        print(''.join(result))

def main(env, data, encode, decode, **kwargs):
    command = 'uname -a'

    if encode:
        command = "/opt/oriel_proxygw/scripts/url-encoder.py --env {} --params '{}'".format(env, data)
    elif decode:
        command = "/opt/oriel_proxygw/scripts/url-decoder.py -u '{}'".format(data)

    run(env, command)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--env', '-e', default='prod', type=str)
    parser.add_argument('--data', '-d', type=str, required=True)
    parser.add_argument('--encode', action='store_true')
    parser.add_argument('--decode',  action='store_true')

    args = parser.parse_args()
    if args.data.startswith('http') or args.data.startswith('//'):
        args.decode = True
        if '//uu13uu.com/' in args.data:
            args.env = 'test'
        elif '//s2t2s.com/' in args.data:
            args.env = 'stage'
    elif args.data.startswith('{'):
        args.encode = True

    main(**vars(args))

