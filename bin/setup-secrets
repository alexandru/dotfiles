#!/bin/bash

set -e

# shellcheck disable=SC2139
export NODE_OPTIONS="--no-deprecation"

if bw login --check; then                                               
    echo "Bitwarden is already logged-in"
    if bw unlock --check; then
        echo "Bitwarden is already unlocked"
        BW_SESSION="$BW_SESSION"
    else
        echo "Unlocking Bitwarden..."
        BW_SESSION="$(bw unlock --raw)"
    fi
else
    echo "Logging into Bitwarden (vault.nedelcu.net) ..."
    read -p "Bitwarden server (default vault.bitwarden.com): " BW_SERVER
    if [ -z "$BW_SERVER" ]; then
        BW_SERVER="vault.bitwarden.com"
    fi
    bw config server "$BW_SERVER"
    BW_SESSION="$(bw login --raw)"
fi
export BW_SESSION

echo "---------"
echo "Generating ~/.secrets..."

CLOUDFLARE_JSON="$(bw list items --search "CloudFlare" | jq '.[] | select(.name == "CloudFlare")')"
NEXTDNS_JSON="$(bw list items --search "NextDNS" | jq '.[] | select(.name == "NextDNS")')"
{                                                               
    echo "# ------------------------"
    echo "# Cloudflare"
    echo "export CLOUDFLARE_AUTH_EMAIL=\"$(echo "$CLOUDFLARE_JSON" | jq -r '.login.username')\""
    echo "export CLOUDFLARE_AUTH_KEY=\"$(echo "$CLOUDFLARE_JSON" | jq -r '.fields.[] | select(.name=="Api Key / Global") | .value')\""
    echo
    echo "# ------------------------"
    echo "# NextDNS"
    echo "export NEXTDNS_API_KEY=\"$(echo "$NEXTDNS_JSON" | jq -r '.fields.[] | select(.name=="Api Key") | .value')\""
    echo "export NEXTDNS_PROFILE_ID=\"$(echo "$NEXTDNS_JSON" | jq -r '.fields.[] | select(.name=="ING") | .value')\""
    echo
    echo "# -=-=-=-=-=-=-=-=-=-=-=-="
} > ~/.secrets

chmod go-rwx "$HOME/.secrets"

echo "---------"
echo "Setting up SSH keys..."

SSH_JSON="$(bw list items --search "SSH" | jq '.[] | select(.name == "SSH / 2022 (ed25519)")')"
SSH_FILENAME="$(echo "$SSH_JSON" | jq -r '.fields[] | select(.name == "Filename") | .value')"
SSH_PASSWORD="$(echo "$SSH_JSON" | jq -r '.fields[] | select(.name == "Password") | .value')"
SSH_FILEPATH="$HOME/.ssh/$SSH_FILENAME"
mkdir -p "$HOME/.ssh"
echo "$SSH_JSON" | jq -r '.fields[] | select(.name == "Public key") | .value' > "$HOME/.ssh/$SSH_FILENAME.pub"
echo "$SSH_JSON" | jq -r '.notes' > "$SSH_FILEPATH"
chmod -R go-rwx "$HOME/.ssh/"


echo "---------"
echo "Adding SSH keys to ssh-agent..."

eval "$(ssh-agent)"

set +e
expect << EOF
  spawn ssh-add  --apple-use-keychain "$SSH_FILEPATH"
  expect "Enter passphrase for $SSH_FILEPATH:"
  send "$SSH_PASSWORD\r"
  expect eof
EOF
set -e
